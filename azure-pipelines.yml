# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

jobs:
- job: Linux

  pool:
    vmImage: 'ubuntu-16.04'

  variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'

  steps:
  - script: |
      set -e
      sed -i -e 's/netcoreapp2.1;netstandard1.3;net452;xamarin.ios10;monoandroid44/netcoreapp2.1;netstandard1.3/' SharpSnmpLib/SharpSnmpLib.csproj
      sed -i -e 's/netcoreapp2.1;netstandard1.3;net452;xamarin.ios10;monoandroid44/netcoreapp2.1;netstandard1.3/' SharpSnmpLib.Engine/SharpSnmpLib.Engine.csproj
      sed -i -e 's/netstandard1.3;net452/netstandard1.3/' SharpSnmpLib.BouncyCastle/SharpSnmpLib.BouncyCastle.csproj
      sed -i -e 's/netcoreapp2.1;net452/netcoreapp2.1/' Tests/CSharpCore/Tests.NetStandard.csproj
      dotnet build SharpSnmpLib.NetStandard.macOS.sln --configuration $(buildConfiguration)
      dotnet test Tests/CSharpCore/Tests.NetStandard.csproj --configuration $(buildConfiguration) --no-build --filter "FullyQualifiedName~Lextm.SharpSnmpLib.Integration.TrapDaemonTestFixture" --framework netcoreapp2.1
      dotnet test Tests/CSharpCore/Tests.NetStandard.csproj --configuration $(buildConfiguration) --no-build --filter "FullyQualifiedName~Lextm.SharpSnmpLib.Integration.DaemonTestFixture" --framework netcoreapp2.1
      dotnet test Tests/CSharpCore/Tests.NetStandard.csproj --configuration $(buildConfiguration) --no-build --filter "FullyQualifiedName~Lextm.SharpSnmpLib.Unit" --framework netcoreapp2.1

- job: macOS

  pool:
    vmImage: 'macOS-10.13'

  variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'

  steps:
  - script: |
      sudo sysctl -w net.inet.udp.maxdgram=65535
      export CI=true
      set -e
      sed -i -e 's/netcoreapp2.1;netstandard1.3;net452;xamarin.ios10;monoandroid44/netcoreapp2.1;netstandard1.3/' SharpSnmpLib/SharpSnmpLib.csproj
      sed -i -e 's/netcoreapp2.1;netstandard1.3;net452;xamarin.ios10;monoandroid44/netcoreapp2.1;netstandard1.3/' SharpSnmpLib.Engine/SharpSnmpLib.Engine.csproj
      sed -i -e 's/netstandard1.3;net452/netstandard1.3/' SharpSnmpLib.BouncyCastle/SharpSnmpLib.BouncyCastle.csproj
      sed -i -e 's/netcoreapp2.1;net452/netcoreapp2.1/' Tests/CSharpCore/Tests.NetStandard.csproj
      dotnet build SharpSnmpLib.NetStandard.macOS.sln --configuration $(buildConfiguration)
      dotnet test Tests/CSharpCore/Tests.NetStandard.csproj --configuration $(buildConfiguration) --no-build --filter "FullyQualifiedName~Lextm.SharpSnmpLib.Integration.TrapDaemonTestFixture" --framework netcoreapp2.1
      dotnet test Tests/CSharpCore/Tests.NetStandard.csproj --configuration $(buildConfiguration) --no-build --filter "FullyQualifiedName~Lextm.SharpSnmpLib.Integration.DaemonTestFixture" --framework netcoreapp2.1
      dotnet test Tests/CSharpCore/Tests.NetStandard.csproj --configuration $(buildConfiguration) --no-build --filter "FullyQualifiedName~Lextm.SharpSnmpLib.Unit" --framework netcoreapp2.1

- job: Windows

  pool:
    vmImage: 'VS2017-Win2016'

  variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'

  steps:
  - script: |
      build.release.bat
      dotnet test Tests/CSharpCore/Tests.NetStandard.csproj --configuration $(buildConfiguration) --no-build --framework netcoreapp2.1
      dotnet test Tests/CSharpCore/Tests.NetStandard.csproj --configuration $(buildConfiguration) --no-build --framework net452
